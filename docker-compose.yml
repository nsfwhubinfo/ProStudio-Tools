version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: prostudio-redis
    command: >
      redis-server
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - prostudio-net
    restart: unless-stopped

  app:
    # Build from the new Dockerfile in the project root
    build:
      context: .
      dockerfile: Dockerfile
    container_name: prostudio-app
    environment:
      - PROSTUDIO_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_WORKERS=2
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - prostudio-net
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: prostudio-nginx
    ports:
      - "80:80"
    volumes:
      # Assuming nginx.conf exists in deploy/zero-cost/ as before
      - ./deploy/zero-cost/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - prostudio-net
    restart: unless-stopped

volumes:
  redis_data:

networks:
  prostudio-net:
    driver: bridge