# Kubernetes deployment for ProStudio on GKE
# ==========================================

apiVersion: v1
kind: Namespace
metadata:
  name: prostudio-prod
  labels:
    name: prostudio-prod
    environment: production

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prostudio-config
  namespace: prostudio-prod
data:
  PROSTUDIO_ENV: "production"
  ENABLE_METRICS: "true"
  ENABLE_GPU: "false"
  API_WORKERS: "4"
  CACHE_TTL_SECONDS: "3600"
  MAX_MEMORY_MB: "3072"
  ENABLE_COMPRESSION: "true"
  ENABLE_PIPELINE: "true"
  REDIS_PORT: "6379"

---
apiVersion: v1
kind: Secret
metadata:
  name: prostudio-secrets
  namespace: prostudio-prod
type: Opaque
stringData:
  redis-auth: "REPLACE_WITH_ACTUAL_AUTH_STRING"
  api-key: "REPLACE_WITH_ACTUAL_API_KEY"
  secret-key: "REPLACE_WITH_ACTUAL_SECRET_KEY"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prostudio
  namespace: prostudio-prod
  labels:
    app: prostudio
    component: api
    environment: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: prostudio
      component: api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: prostudio
        component: api
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: prostudio-sa
      
      # Prefer standard nodes, tolerate spot
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: spot
                operator: DoesNotExist
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - prostudio
              topologyKey: kubernetes.io/hostname
      
      tolerations:
      - key: spot-instance
        operator: Equal
        value: "true"
        effect: NoSchedule
      
      containers:
      - name: prostudio
        image: us-central1-docker.pkg.dev/PROJECT_ID/prostudio-production/prostudio:latest
        imagePullPolicy: Always
        
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        
        env:
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: redis-connection
              key: host
        - name: REDIS_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: prostudio-secrets
              key: redis-auth
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: prostudio-secrets
              key: api-key
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: prostudio-secrets
              key: secret-key
        - name: GCS_CACHE_BUCKET
          value: "prostudio-cache-production-PROJECT_ID"
        
        envFrom:
        - configMapRef:
            name: prostudio-config
        
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
            ephemeral-storage: 2Gi
          limits:
            cpu: 2000m
            memory: 4Gi
            ephemeral-storage: 5Gi
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
        
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir:
          sizeLimit: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: prostudio-service
  namespace: prostudio-prod
  labels:
    app: prostudio
    component: api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: prostudio
    component: api

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: prostudio-hpa
  namespace: prostudio-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: prostudio
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 4
        periodSeconds: 60
      selectPolicy: Max

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: prostudio-pdb
  namespace: prostudio-prod
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: prostudio
      component: api

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: prostudio-network-policy
  namespace: prostudio-prod
spec:
  podSelector:
    matchLabels:
      app: prostudio
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 443   # HTTPS for external APIs
    - protocol: TCP
      port: 53    # DNS
    - protocol: UDP
      port: 53    # DNS